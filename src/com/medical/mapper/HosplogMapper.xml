<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.HosplogMapper" >
  <resultMap id="BaseResultMap" type="com.medical.po.Hosplog" >
    <id column="hospLogId" property="hosplogid" jdbcType="INTEGER" />
    <result column="hospLogTime" property="hosplogtime" jdbcType="TIMESTAMP" />
    <result column="hospLogLoc" property="hosplogloc" jdbcType="VARCHAR" />
    <result column="hospLogBVer" property="hosplogbver" jdbcType="VARCHAR" />
    <result column="hospLogMac" property="hosplogmac" jdbcType="VARCHAR" />
    <result column="hospLogIp" property="hosplogip" jdbcType="VARCHAR" />
    <result column="hospLoginId" property="hosploginid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hospLogId, hospLogTime, hospLogLoc, hospLogBVer, hospLogMac, hospLogIp, hospLoginId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medical.po.HosplogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hosplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hosplog
    where hospLogId = #{hosplogid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hosplog
    where hospLogId = #{hosplogid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medical.po.HosplogExample" >
    delete from hosplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medical.po.Hosplog" >
    insert into hosplog (hospLogId, hospLogTime, hospLogLoc, 
      hospLogBVer, hospLogMac, hospLogIp, 
      hospLoginId)
    values (#{hosplogid,jdbcType=INTEGER}, #{hosplogtime,jdbcType=TIMESTAMP}, #{hosplogloc,jdbcType=VARCHAR}, 
      #{hosplogbver,jdbcType=VARCHAR}, #{hosplogmac,jdbcType=VARCHAR}, #{hosplogip,jdbcType=VARCHAR}, 
      #{hosploginid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.medical.po.Hosplog" >
    insert into hosplog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hosplogid != null" >
        hospLogId,
      </if>
      <if test="hosplogtime != null" >
        hospLogTime,
      </if>
      <if test="hosplogloc != null" >
        hospLogLoc,
      </if>
      <if test="hosplogbver != null" >
        hospLogBVer,
      </if>
      <if test="hosplogmac != null" >
        hospLogMac,
      </if>
      <if test="hosplogip != null" >
        hospLogIp,
      </if>
      <if test="hosploginid != null" >
        hospLoginId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hosplogid != null" >
        #{hosplogid,jdbcType=INTEGER},
      </if>
      <if test="hosplogtime != null" >
        #{hosplogtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hosplogloc != null" >
        #{hosplogloc,jdbcType=VARCHAR},
      </if>
      <if test="hosplogbver != null" >
        #{hosplogbver,jdbcType=VARCHAR},
      </if>
      <if test="hosplogmac != null" >
        #{hosplogmac,jdbcType=VARCHAR},
      </if>
      <if test="hosplogip != null" >
        #{hosplogip,jdbcType=VARCHAR},
      </if>
      <if test="hosploginid != null" >
        #{hosploginid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medical.po.HosplogExample" resultType="java.lang.Integer" >
    select count(*) from hosplog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hosplog
    <set >
      <if test="record.hosplogid != null" >
        hospLogId = #{record.hosplogid,jdbcType=INTEGER},
      </if>
      <if test="record.hosplogtime != null" >
        hospLogTime = #{record.hosplogtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hosplogloc != null" >
        hospLogLoc = #{record.hosplogloc,jdbcType=VARCHAR},
      </if>
      <if test="record.hosplogbver != null" >
        hospLogBVer = #{record.hosplogbver,jdbcType=VARCHAR},
      </if>
      <if test="record.hosplogmac != null" >
        hospLogMac = #{record.hosplogmac,jdbcType=VARCHAR},
      </if>
      <if test="record.hosplogip != null" >
        hospLogIp = #{record.hosplogip,jdbcType=VARCHAR},
      </if>
      <if test="record.hosploginid != null" >
        hospLoginId = #{record.hosploginid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hosplog
    set hospLogId = #{record.hosplogid,jdbcType=INTEGER},
      hospLogTime = #{record.hosplogtime,jdbcType=TIMESTAMP},
      hospLogLoc = #{record.hosplogloc,jdbcType=VARCHAR},
      hospLogBVer = #{record.hosplogbver,jdbcType=VARCHAR},
      hospLogMac = #{record.hosplogmac,jdbcType=VARCHAR},
      hospLogIp = #{record.hosplogip,jdbcType=VARCHAR},
      hospLoginId = #{record.hosploginid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medical.po.Hosplog" >
    update hosplog
    <set >
      <if test="hosplogtime != null" >
        hospLogTime = #{hosplogtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hosplogloc != null" >
        hospLogLoc = #{hosplogloc,jdbcType=VARCHAR},
      </if>
      <if test="hosplogbver != null" >
        hospLogBVer = #{hosplogbver,jdbcType=VARCHAR},
      </if>
      <if test="hosplogmac != null" >
        hospLogMac = #{hosplogmac,jdbcType=VARCHAR},
      </if>
      <if test="hosplogip != null" >
        hospLogIp = #{hosplogip,jdbcType=VARCHAR},
      </if>
      <if test="hosploginid != null" >
        hospLoginId = #{hosploginid,jdbcType=INTEGER},
      </if>
    </set>
    where hospLogId = #{hosplogid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medical.po.Hosplog" >
    update hosplog
    set hospLogTime = #{hosplogtime,jdbcType=TIMESTAMP},
      hospLogLoc = #{hosplogloc,jdbcType=VARCHAR},
      hospLogBVer = #{hosplogbver,jdbcType=VARCHAR},
      hospLogMac = #{hosplogmac,jdbcType=VARCHAR},
      hospLogIp = #{hosplogip,jdbcType=VARCHAR},
      hospLoginId = #{hosploginid,jdbcType=INTEGER}
    where hospLogId = #{hosplogid,jdbcType=INTEGER}
  </update>
</mapper>