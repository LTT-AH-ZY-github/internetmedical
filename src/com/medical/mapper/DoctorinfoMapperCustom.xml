<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.DoctorinfoMapperCustom" >
	
	<!--管理员查询医生列表  -->
  	<select id="selectByDocLoginTypeInAdmin" parameterType="java.lang.Integer" resultType="map">
  		select a.docloginid,b.dochuanxinaccount,b.docloginphone,a.docname,a.docmale,a.doctitle,a.dochosp,b.doclogintype,c.accounttypename as doclogintypename
  		from doctorinfo as a 
  			left join  doctorlogininfo as b on a.docloginid= b.docloginid
  			left join accounttype as c on c.accounttypeid =b.docLoginType
  		<if test="param1!=null">
	  		where	b.doclogintype = #{0}
	  	</if>
	  	Order by b.docLoginSubCheckTime DESC
  	</select>
  	
  	<!--管理员查询医生详细信息  -->
  	<select id="selectInfoByDocLoginIdInAdmin" parameterType="java.lang.Integer" resultType="map">
  		select a.docloginid,b.dochuanxinaccount,b.docloginphone,b.doclogintype,c.accounttypename as doclogintypename,
  			a.docname,a.doccardnum,a.docmale,a.docage,a.dochosp,a.docallday,a.doctitle,a.docprimarydept,a.docseconddept,a.hosplevel,
  			a.dochospprovince,a.dochospcity,a.dochosparea,a.dochospother,a.dochosplon,a.dochosplat,
  			a.doccardphoto,a.doctitlephoto,a.docqualphoto,a.docworkcardphoto,a.docotherphoto
  		from doctorinfo as a 
  			left join  doctorlogininfo as b on a.docloginid= b.docloginid
  			left join accounttype as c on c.accounttypeid =b.docLoginType
  		where  a.docloginid = #{0}
	</select>
  	
	<!-- 医生信息列表查询 -->
 	<select id="findDoctorInfoInList" parameterType="com.medical.po.DoctorSearch" 
  						resultType="map">
  		 SELECT	a.docloginid,e.dochuanxinaccount,e.docloginpix,a.docname,a.doctitle,a.dochosp,a.hosplevel,a.docprimarydept,a.docseconddept,
  					a.docallday,a.docexpert,a.docaddresslocation,a.docaddressprovince,a.docaddresscity,a.docaddressarea,a.docaddressother,
	  		     ROUND(
			        6378.138 * 2 * ASIN(
			            SQRT(
			                POW(
			                    SIN(
			                        (
			                        
			                           #{lat} * PI() / 180 - a.docAddressLat * PI() / 180
			                        ) / 2
			                    ),
			                    2
			                ) + COS(#{lat} * PI() / 180) * COS(a.docAddressLat * PI() / 180) * POW(
			                    SIN(
			                        (
			                            #{lon} * PI() / 180 - a.docAddressLon * PI() / 180
			                        ) / 2
			                    ),
			                    2
			                )
			            )
			        ) * 1000
			    ) AS distance
  		   FROM doctorinfo as a 
  		   		left join  doctorskd as d on a.docLoginId = d.docLoginId 
  		   		left join doctorlogininfo as e on a.docLoginId = e.docLoginId 
  		   <where>
  		   		and e.docLoginType=1
	  		   <if test="province!=null">
	  		   	  and e.docLoginProvince=#{province}
	  		   </if>
	  		   <if test="city!=null">
	  		   	  and e.docLoginCity=#{city}
	  		   </if>
	  		   <if test="area!=null">
	  		   	  and e.docLoginArea=#{area}
	  		   </if>
	  		   <if test="primaryDept!=null">
	  		   	  and a.docPrimaryDept=#{primaryDept}
	  		   </if>
	  		   <if test="secondDept!=null">
	  		   	  and a.docSecondDept=#{secondDept}
	  		   </if>
	  		 </where>
  		   ORDER BY distance ASC
  	</select>
  
 	<!--医生信息地图模式  -->
  	<select id="findDoctorInfoInMap" parameterType="double" resultType="map">
  		   SELECT a.docloginid,b.docloginpix,a.docAddressLat as dochosplat, a.docAddressLon as dochosplon,a.docprimarydept,docseconddept,docname,b.dochuanxinaccount
  		  	FROM doctorinfo as a
  		   	  left join doctorlogininfo as b on a.docLoginId = b.docLoginId
  		   where  (a.docAddressLat BETWEEN #{0} AND #{1}) AND (a.docAddressLon BETWEEN #{2} AND #{3});
  	</select>
  	<select id="findDoctorinfoByDocLoginId" parameterType="java.lang.Integer" resultType="com.medical.po.Doctorinfo">
  			select * from doctorinfo where docLoginId = #{id}
  	</select>
  	
   <!--查找单个医生详细信息  -->
  	<select id="findDoctorByDocLoginId" parameterType="java.lang.Integer" resultType="map">
  			select a.docloginid,b.docloginpix,b.dochuanxinaccount,
  				a.docname,a.docmale,a.docage,a.doctitle,a.docexpert,a.docabs,a.docprimarydept,a.docseconddept,a.docallday,
  				a.dochosp,a.hosplevel,a.dochospprovince,a.dochospcity,a.dochosparea,a.dochospother,a.docaddresslocation,a.docaddressprovince,a.docaddresscity,a.docaddressarea,a.docaddressother,
  				a.docaddresslon,a.docaddresslat
  			 from doctorinfo as a 
  				left join doctorlogininfo as b on a.docLoginId = b.docLoginId 
  			where a.docLoginId = #{id}
  	</select>
  	
  	<select id="findDoctorByInfo" parameterType="com.medical.po.DoctorSearch" 
  						resultType="map">
  		   SELECT *
  		   FROM doctorinfo 
  		   <where>
	  		   <if test="province!=null">
	  		   	  and e.docLoginProvince=#{province}
	  		   </if>
	  		   <if test="city!=null">
	  		   	  and e.docLoginCity=#{city}
	  		   </if>
	  		   <if test="area!=null">
	  		   	  and e.docLoginArea=#{area}
	  		   </if>
  		   </where>
  		   ORDER BY docId ASC
  		   limit #{pageNo},#{pageSize}; 
  	</select>
  	<select id="selectFirstInfoByDocLoginId" parameterType="java.lang.Integer" resultType="map">
  			select docname,doccardnum,docmale,docage,dochosp,docallday,doctitle,docprimarydept,docseconddept,hosplevel,
  			dochospprovince,dochospcity,dochosparea,dochospother,dochosplon,dochosplat
  			from doctorinfo where docLoginId = #{id}
  	</select>
  	<select id="selectFirstInfoDeptByDocLoginId" parameterType="java.lang.Integer" resultType="map">
  			select docprimarydept,docseconddept
  			from doctorinfo where docLoginId = #{id}
  	</select>
  	<select id="selectSecondInfoByDocLoginId" parameterType="java.lang.Integer" resultType="map">
  			select doccardphoto,doctitlephoto,docqualphoto,docworkcardphoto,docotherphoto
  			from doctorinfo where docLoginId = #{id}
  	</select>
  	<select id="selectNameAndTitleByDocLoginId" parameterType="java.lang.Integer" resultType="map">
  			select a.docname,a.doctitle
  			from doctorinfo as a 
  			where docLoginId = #{id}
  	</select>
  	<select id="paginationDoctorList" parameterType="com.medical.po.HospSearchDocTerm"
  		 resultType="map">
  		   SELECT a.docloginid,a.docloginpix,a.docloginname,c.docallday,a.docloginphone,c.dochosp,c.docdept,c.docage,c.docmale,
  		   			c.doctitle,c.docname,c.docbirthdate,c.docnation,c.docexpert,c.docabs,
  		   			c.dochospprovince,c.dochospcity,c.dochosparea,c.dochospother,
  		   			b.monam,b.monpm,b.tueam,b.tuepm,b.wedam,b.wedpm,b.thuam,b.thupm,b.friam,b.fripm,b.satam,b.satpm,b.sunam,b.sunpm
  		   FROM doctorlogininfo as a 
  		   left join doctorskd as b on a.docLoginId=b.docLoginId 
  		   left join doctorinfo as c on a.docLoginId=c.docLoginId 
  		  
  		<!-- <where>
  			<if test="doctorTitle!=null"></if>
  			and d.docTitleId=#{doctorTitle}
  			<if test="hospitalLevel!=null"></if>
  			and c.hospLevelId=#{hospitalLevel}
  		</where> -->
  		<!-- ORDER BY doctorlogininfo.docLoginId -->
  		
  	</select>
  	<!-- 根据登录id查询医生个人信息 -->
  	<select id="selectByDocLoginId" parameterType="java.lang.Integer" resultType="com.medical.po.Doctorinfo">
  			select * from doctorinfo where docLoginId = #{0}
  	</select>
  	 <select id="selectByDept" parameterType="String" resultType="com.medical.po.Doctorinfo">
  		SELECT a.* 
  			FROM doctorinfo as a
  				left join doctorlogininfo as b on a.docLoginId = b.docLoginId
  		where
  			b.docLoginType=1
  		<if test="param1!=null">
  			and a.docPrimaryDept=#{0} 
  		</if>
  		
		<if test="param2!=null">
			and a.docSecondDept=#{1}
		</if>
  		ORDER BY docId ASC
  	</select>
  	 <select id="selectByName" parameterType="String" resultType="map">
  		SELECT docloginid,docname,docmale,docage,doctitle,dochosp,docprimarydept,docseconddept
  		FROM doctorinfo 
  		where docName=#{0} 
  	</select>
  
  	<update id="updateInfoByPrimaryKey" parameterType="com.medical.po.Doctorinfo" >
    update doctorinfo
    set 
      docAddressLocation = #{docaddresslocation,jdbcType=VARCHAR},
      docAddressProvince = #{docaddressprovince,jdbcType=VARCHAR},
      docAddressCity = #{docaddresscity,jdbcType=VARCHAR},
      docAddressArea = #{docaddressarea,jdbcType=VARCHAR},
      docAddressOther = #{docaddressother,jdbcType=VARCHAR},
      docAddressLon = #{docaddresslon,jdbcType=VARCHAR},
      docAddressLat = #{docaddresslat,jdbcType=VARCHAR}
      
    where docId = #{docid,jdbcType=INTEGER}
  </update>
  
  </mapper>