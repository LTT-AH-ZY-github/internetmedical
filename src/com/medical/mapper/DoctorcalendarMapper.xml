<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.DoctorcalendarMapper" >
  <resultMap id="BaseResultMap" type="com.medical.po.Doctorcalendar" >
    <id column="docCalendarId" property="doccalendarid" jdbcType="INTEGER" />
    <result column="docCalendarDay" property="doccalendarday" jdbcType="DATE" />
    <result column="docCalendarTime" property="doccalendartime" jdbcType="CHAR" />
    <result column="docCalendarTimeInterval" property="doccalendartimeinterval" jdbcType="VARCHAR" />
    <result column="docCalendarAffair" property="doccalendaraffair" jdbcType="VARCHAR" />
    <result column="docCalendarAdressId" property="doccalendaradressid" jdbcType="INTEGER" />
    <result column="docLoginId" property="docloginid" jdbcType="INTEGER" />
    <result column="docCalendarIsCheck" property="doccalendarischeck" jdbcType="BIT" />
    <result column="docAddressLocation" property="docaddresslocation" jdbcType="VARCHAR" />
    <result column="docAddressProvince" property="docaddressprovince" jdbcType="VARCHAR" />
    <result column="docAddressCity" property="docaddresscity" jdbcType="VARCHAR" />
    <result column="docAddressArea" property="docaddressarea" jdbcType="VARCHAR" />
    <result column="docAddressOther" property="docaddressother" jdbcType="VARCHAR" />
    <result column="docAddressLon" property="docaddresslon" jdbcType="VARCHAR" />
    <result column="docAddressLat" property="docaddresslat" jdbcType="VARCHAR" />
    <result column="docCalendarPrice" property="doccalendarprice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    docCalendarId, docCalendarDay, docCalendarTime, docCalendarTimeInterval, docCalendarAffair, 
    docCalendarAdressId, docLoginId, docCalendarIsCheck, docAddressLocation, docAddressProvince, 
    docAddressCity, docAddressArea, docAddressOther, docAddressLon, docAddressLat, docCalendarPrice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medical.po.DoctorcalendarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doctorcalendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from doctorcalendar
    where docCalendarId = #{doccalendarid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doctorcalendar
    where docCalendarId = #{doccalendarid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medical.po.DoctorcalendarExample" >
    delete from doctorcalendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medical.po.Doctorcalendar" >
    insert into doctorcalendar (docCalendarId, docCalendarDay, docCalendarTime, 
      docCalendarTimeInterval, docCalendarAffair, 
      docCalendarAdressId, docLoginId, docCalendarIsCheck, 
      docAddressLocation, docAddressProvince, 
      docAddressCity, docAddressArea, docAddressOther, 
      docAddressLon, docAddressLat, docCalendarPrice
      )
    values (#{doccalendarid,jdbcType=INTEGER}, #{doccalendarday,jdbcType=DATE}, #{doccalendartime,jdbcType=CHAR}, 
      #{doccalendartimeinterval,jdbcType=VARCHAR}, #{doccalendaraffair,jdbcType=VARCHAR}, 
      #{doccalendaradressid,jdbcType=INTEGER}, #{docloginid,jdbcType=INTEGER}, #{doccalendarischeck,jdbcType=BIT}, 
      #{docaddresslocation,jdbcType=VARCHAR}, #{docaddressprovince,jdbcType=VARCHAR}, 
      #{docaddresscity,jdbcType=VARCHAR}, #{docaddressarea,jdbcType=VARCHAR}, #{docaddressother,jdbcType=VARCHAR}, 
      #{docaddresslon,jdbcType=VARCHAR}, #{docaddresslat,jdbcType=VARCHAR}, #{doccalendarprice,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.medical.po.Doctorcalendar" >
    insert into doctorcalendar
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="doccalendarid != null" >
        docCalendarId,
      </if>
      <if test="doccalendarday != null" >
        docCalendarDay,
      </if>
      <if test="doccalendartime != null" >
        docCalendarTime,
      </if>
      <if test="doccalendartimeinterval != null" >
        docCalendarTimeInterval,
      </if>
      <if test="doccalendaraffair != null" >
        docCalendarAffair,
      </if>
      <if test="doccalendaradressid != null" >
        docCalendarAdressId,
      </if>
      <if test="docloginid != null" >
        docLoginId,
      </if>
      <if test="doccalendarischeck != null" >
        docCalendarIsCheck,
      </if>
      <if test="docaddresslocation != null" >
        docAddressLocation,
      </if>
      <if test="docaddressprovince != null" >
        docAddressProvince,
      </if>
      <if test="docaddresscity != null" >
        docAddressCity,
      </if>
      <if test="docaddressarea != null" >
        docAddressArea,
      </if>
      <if test="docaddressother != null" >
        docAddressOther,
      </if>
      <if test="docaddresslon != null" >
        docAddressLon,
      </if>
      <if test="docaddresslat != null" >
        docAddressLat,
      </if>
      <if test="doccalendarprice != null" >
        docCalendarPrice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="doccalendarid != null" >
        #{doccalendarid,jdbcType=INTEGER},
      </if>
      <if test="doccalendarday != null" >
        #{doccalendarday,jdbcType=DATE},
      </if>
      <if test="doccalendartime != null" >
        #{doccalendartime,jdbcType=CHAR},
      </if>
      <if test="doccalendartimeinterval != null" >
        #{doccalendartimeinterval,jdbcType=VARCHAR},
      </if>
      <if test="doccalendaraffair != null" >
        #{doccalendaraffair,jdbcType=VARCHAR},
      </if>
      <if test="doccalendaradressid != null" >
        #{doccalendaradressid,jdbcType=INTEGER},
      </if>
      <if test="docloginid != null" >
        #{docloginid,jdbcType=INTEGER},
      </if>
      <if test="doccalendarischeck != null" >
        #{doccalendarischeck,jdbcType=BIT},
      </if>
      <if test="docaddresslocation != null" >
        #{docaddresslocation,jdbcType=VARCHAR},
      </if>
      <if test="docaddressprovince != null" >
        #{docaddressprovince,jdbcType=VARCHAR},
      </if>
      <if test="docaddresscity != null" >
        #{docaddresscity,jdbcType=VARCHAR},
      </if>
      <if test="docaddressarea != null" >
        #{docaddressarea,jdbcType=VARCHAR},
      </if>
      <if test="docaddressother != null" >
        #{docaddressother,jdbcType=VARCHAR},
      </if>
      <if test="docaddresslon != null" >
        #{docaddresslon,jdbcType=VARCHAR},
      </if>
      <if test="docaddresslat != null" >
        #{docaddresslat,jdbcType=VARCHAR},
      </if>
      <if test="doccalendarprice != null" >
        #{doccalendarprice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medical.po.DoctorcalendarExample" resultType="java.lang.Integer" >
    select count(*) from doctorcalendar
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update doctorcalendar
    <set >
      <if test="record.doccalendarid != null" >
        docCalendarId = #{record.doccalendarid,jdbcType=INTEGER},
      </if>
      <if test="record.doccalendarday != null" >
        docCalendarDay = #{record.doccalendarday,jdbcType=DATE},
      </if>
      <if test="record.doccalendartime != null" >
        docCalendarTime = #{record.doccalendartime,jdbcType=CHAR},
      </if>
      <if test="record.doccalendartimeinterval != null" >
        docCalendarTimeInterval = #{record.doccalendartimeinterval,jdbcType=VARCHAR},
      </if>
      <if test="record.doccalendaraffair != null" >
        docCalendarAffair = #{record.doccalendaraffair,jdbcType=VARCHAR},
      </if>
      <if test="record.doccalendaradressid != null" >
        docCalendarAdressId = #{record.doccalendaradressid,jdbcType=INTEGER},
      </if>
      <if test="record.docloginid != null" >
        docLoginId = #{record.docloginid,jdbcType=INTEGER},
      </if>
      <if test="record.doccalendarischeck != null" >
        docCalendarIsCheck = #{record.doccalendarischeck,jdbcType=BIT},
      </if>
      <if test="record.docaddresslocation != null" >
        docAddressLocation = #{record.docaddresslocation,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddressprovince != null" >
        docAddressProvince = #{record.docaddressprovince,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddresscity != null" >
        docAddressCity = #{record.docaddresscity,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddressarea != null" >
        docAddressArea = #{record.docaddressarea,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddressother != null" >
        docAddressOther = #{record.docaddressother,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddresslon != null" >
        docAddressLon = #{record.docaddresslon,jdbcType=VARCHAR},
      </if>
      <if test="record.docaddresslat != null" >
        docAddressLat = #{record.docaddresslat,jdbcType=VARCHAR},
      </if>
      <if test="record.doccalendarprice != null" >
        docCalendarPrice = #{record.doccalendarprice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update doctorcalendar
    set docCalendarId = #{record.doccalendarid,jdbcType=INTEGER},
      docCalendarDay = #{record.doccalendarday,jdbcType=DATE},
      docCalendarTime = #{record.doccalendartime,jdbcType=CHAR},
      docCalendarTimeInterval = #{record.doccalendartimeinterval,jdbcType=VARCHAR},
      docCalendarAffair = #{record.doccalendaraffair,jdbcType=VARCHAR},
      docCalendarAdressId = #{record.doccalendaradressid,jdbcType=INTEGER},
      docLoginId = #{record.docloginid,jdbcType=INTEGER},
      docCalendarIsCheck = #{record.doccalendarischeck,jdbcType=BIT},
      docAddressLocation = #{record.docaddresslocation,jdbcType=VARCHAR},
      docAddressProvince = #{record.docaddressprovince,jdbcType=VARCHAR},
      docAddressCity = #{record.docaddresscity,jdbcType=VARCHAR},
      docAddressArea = #{record.docaddressarea,jdbcType=VARCHAR},
      docAddressOther = #{record.docaddressother,jdbcType=VARCHAR},
      docAddressLon = #{record.docaddresslon,jdbcType=VARCHAR},
      docAddressLat = #{record.docaddresslat,jdbcType=VARCHAR},
      docCalendarPrice = #{record.doccalendarprice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medical.po.Doctorcalendar" >
    update doctorcalendar
    <set >
      <if test="doccalendarday != null" >
        docCalendarDay = #{doccalendarday,jdbcType=DATE},
      </if>
      <if test="doccalendartime != null" >
        docCalendarTime = #{doccalendartime,jdbcType=CHAR},
      </if>
      <if test="doccalendartimeinterval != null" >
        docCalendarTimeInterval = #{doccalendartimeinterval,jdbcType=VARCHAR},
      </if>
      <if test="doccalendaraffair != null" >
        docCalendarAffair = #{doccalendaraffair,jdbcType=VARCHAR},
      </if>
      <if test="doccalendaradressid != null" >
        docCalendarAdressId = #{doccalendaradressid,jdbcType=INTEGER},
      </if>
      <if test="docloginid != null" >
        docLoginId = #{docloginid,jdbcType=INTEGER},
      </if>
      <if test="doccalendarischeck != null" >
        docCalendarIsCheck = #{doccalendarischeck,jdbcType=BIT},
      </if>
      <if test="docaddresslocation != null" >
        docAddressLocation = #{docaddresslocation,jdbcType=VARCHAR},
      </if>
      <if test="docaddressprovince != null" >
        docAddressProvince = #{docaddressprovince,jdbcType=VARCHAR},
      </if>
      <if test="docaddresscity != null" >
        docAddressCity = #{docaddresscity,jdbcType=VARCHAR},
      </if>
      <if test="docaddressarea != null" >
        docAddressArea = #{docaddressarea,jdbcType=VARCHAR},
      </if>
      <if test="docaddressother != null" >
        docAddressOther = #{docaddressother,jdbcType=VARCHAR},
      </if>
      <if test="docaddresslon != null" >
        docAddressLon = #{docaddresslon,jdbcType=VARCHAR},
      </if>
      <if test="docaddresslat != null" >
        docAddressLat = #{docaddresslat,jdbcType=VARCHAR},
      </if>
      <if test="doccalendarprice != null" >
        docCalendarPrice = #{doccalendarprice,jdbcType=DECIMAL},
      </if>
    </set>
    where docCalendarId = #{doccalendarid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medical.po.Doctorcalendar" >
    update doctorcalendar
    set docCalendarDay = #{doccalendarday,jdbcType=DATE},
      docCalendarTime = #{doccalendartime,jdbcType=CHAR},
      docCalendarTimeInterval = #{doccalendartimeinterval,jdbcType=VARCHAR},
      docCalendarAffair = #{doccalendaraffair,jdbcType=VARCHAR},
      docCalendarAdressId = #{doccalendaradressid,jdbcType=INTEGER},
      docLoginId = #{docloginid,jdbcType=INTEGER},
      docCalendarIsCheck = #{doccalendarischeck,jdbcType=BIT},
      docAddressLocation = #{docaddresslocation,jdbcType=VARCHAR},
      docAddressProvince = #{docaddressprovince,jdbcType=VARCHAR},
      docAddressCity = #{docaddresscity,jdbcType=VARCHAR},
      docAddressArea = #{docaddressarea,jdbcType=VARCHAR},
      docAddressOther = #{docaddressother,jdbcType=VARCHAR},
      docAddressLon = #{docaddresslon,jdbcType=VARCHAR},
      docAddressLat = #{docaddresslat,jdbcType=VARCHAR},
      docCalendarPrice = #{doccalendarprice,jdbcType=DECIMAL}
    where docCalendarId = #{doccalendarid,jdbcType=INTEGER}
  </update>
</mapper>