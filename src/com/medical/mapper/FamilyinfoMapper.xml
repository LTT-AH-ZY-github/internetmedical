<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.FamilyinfoMapper" >
  <resultMap id="BaseResultMap" type="com.medical.po.Familyinfo" >
    <id column="familyId" property="familyid" jdbcType="INTEGER" />
    <result column="familyName" property="familyname" jdbcType="VARCHAR" />
    <result column="familyMale" property="familymale" jdbcType="CHAR" />
    <result column="familyAge" property="familyage" jdbcType="INTEGER" />
    <result column="userLoginId" property="userloginid" jdbcType="INTEGER" />
    <result column="familyType" property="familytype" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    familyId, familyName, familyMale, familyAge, userLoginId, familyType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medical.po.FamilyinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from familyinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from familyinfo
    where familyId = #{familyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from familyinfo
    where familyId = #{familyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medical.po.FamilyinfoExample" >
    delete from familyinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medical.po.Familyinfo" >
    insert into familyinfo (familyId, familyName, familyMale, 
      familyAge, userLoginId, familyType
      )
    values (#{familyid,jdbcType=INTEGER}, #{familyname,jdbcType=VARCHAR}, #{familymale,jdbcType=CHAR}, 
      #{familyage,jdbcType=INTEGER}, #{userloginid,jdbcType=INTEGER}, #{familytype,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.medical.po.Familyinfo" >
    insert into familyinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="familyid != null" >
        familyId,
      </if>
      <if test="familyname != null" >
        familyName,
      </if>
      <if test="familymale != null" >
        familyMale,
      </if>
      <if test="familyage != null" >
        familyAge,
      </if>
      <if test="userloginid != null" >
        userLoginId,
      </if>
      <if test="familytype != null" >
        familyType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="familyid != null" >
        #{familyid,jdbcType=INTEGER},
      </if>
      <if test="familyname != null" >
        #{familyname,jdbcType=VARCHAR},
      </if>
      <if test="familymale != null" >
        #{familymale,jdbcType=CHAR},
      </if>
      <if test="familyage != null" >
        #{familyage,jdbcType=INTEGER},
      </if>
      <if test="userloginid != null" >
        #{userloginid,jdbcType=INTEGER},
      </if>
      <if test="familytype != null" >
        #{familytype,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medical.po.FamilyinfoExample" resultType="java.lang.Integer" >
    select count(*) from familyinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update familyinfo
    <set >
      <if test="record.familyid != null" >
        familyId = #{record.familyid,jdbcType=INTEGER},
      </if>
      <if test="record.familyname != null" >
        familyName = #{record.familyname,jdbcType=VARCHAR},
      </if>
      <if test="record.familymale != null" >
        familyMale = #{record.familymale,jdbcType=CHAR},
      </if>
      <if test="record.familyage != null" >
        familyAge = #{record.familyage,jdbcType=INTEGER},
      </if>
      <if test="record.userloginid != null" >
        userLoginId = #{record.userloginid,jdbcType=INTEGER},
      </if>
      <if test="record.familytype != null" >
        familyType = #{record.familytype,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update familyinfo
    set familyId = #{record.familyid,jdbcType=INTEGER},
      familyName = #{record.familyname,jdbcType=VARCHAR},
      familyMale = #{record.familymale,jdbcType=CHAR},
      familyAge = #{record.familyage,jdbcType=INTEGER},
      userLoginId = #{record.userloginid,jdbcType=INTEGER},
      familyType = #{record.familytype,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medical.po.Familyinfo" >
    update familyinfo
    <set >
      <if test="familyname != null" >
        familyName = #{familyname,jdbcType=VARCHAR},
      </if>
      <if test="familymale != null" >
        familyMale = #{familymale,jdbcType=CHAR},
      </if>
      <if test="familyage != null" >
        familyAge = #{familyage,jdbcType=INTEGER},
      </if>
      <if test="userloginid != null" >
        userLoginId = #{userloginid,jdbcType=INTEGER},
      </if>
      <if test="familytype != null" >
        familyType = #{familytype,jdbcType=BIT},
      </if>
    </set>
    where familyId = #{familyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medical.po.Familyinfo" >
    update familyinfo
    set familyName = #{familyname,jdbcType=VARCHAR},
      familyMale = #{familymale,jdbcType=CHAR},
      familyAge = #{familyage,jdbcType=INTEGER},
      userLoginId = #{userloginid,jdbcType=INTEGER},
      familyType = #{familytype,jdbcType=BIT}
    where familyId = #{familyid,jdbcType=INTEGER}
  </update>
</mapper>