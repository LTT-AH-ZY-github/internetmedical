<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.RefundrateMapper" >
  <resultMap id="BaseResultMap" type="com.medical.po.Refundrate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="docFefundRate" property="docfefundrate" jdbcType="DECIMAL" />
    <result column="hospFefundRate" property="hospfefundrate" jdbcType="DECIMAL" />
    <result column="adminLoginId" property="adminloginid" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, docFefundRate, hospFefundRate, adminLoginId, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medical.po.RefundrateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refundrate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from refundrate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from refundrate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medical.po.RefundrateExample" >
    delete from refundrate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medical.po.Refundrate" >
    insert into refundrate (id, docFefundRate, hospFefundRate, 
      adminLoginId, updateTime)
    values (#{id,jdbcType=INTEGER}, #{docfefundrate,jdbcType=DECIMAL}, #{hospfefundrate,jdbcType=DECIMAL}, 
      #{adminloginid,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.medical.po.Refundrate" >
    insert into refundrate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="docfefundrate != null" >
        docFefundRate,
      </if>
      <if test="hospfefundrate != null" >
        hospFefundRate,
      </if>
      <if test="adminloginid != null" >
        adminLoginId,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="docfefundrate != null" >
        #{docfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="hospfefundrate != null" >
        #{hospfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="adminloginid != null" >
        #{adminloginid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medical.po.RefundrateExample" resultType="java.lang.Integer" >
    select count(*) from refundrate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refundrate
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.docfefundrate != null" >
        docFefundRate = #{record.docfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="record.hospfefundrate != null" >
        hospFefundRate = #{record.hospfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="record.adminloginid != null" >
        adminLoginId = #{record.adminloginid,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refundrate
    set id = #{record.id,jdbcType=INTEGER},
      docFefundRate = #{record.docfefundrate,jdbcType=DECIMAL},
      hospFefundRate = #{record.hospfefundrate,jdbcType=DECIMAL},
      adminLoginId = #{record.adminloginid,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medical.po.Refundrate" >
    update refundrate
    <set >
      <if test="docfefundrate != null" >
        docFefundRate = #{docfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="hospfefundrate != null" >
        hospFefundRate = #{hospfefundrate,jdbcType=DECIMAL},
      </if>
      <if test="adminloginid != null" >
        adminLoginId = #{adminloginid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medical.po.Refundrate" >
    update refundrate
    set docFefundRate = #{docfefundrate,jdbcType=DECIMAL},
      hospFefundRate = #{hospfefundrate,jdbcType=DECIMAL},
      adminLoginId = #{adminloginid,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>