<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.mapper.HospitalberthMapper" >
  <resultMap id="BaseResultMap" type="com.medical.po.Hospitalberth" >
    <id column="hospBerthId" property="hospberthid" jdbcType="INTEGER" />
    <result column="hospBerthDeptId" property="hospberthdeptid" jdbcType="INTEGER" />
    <result column="hospBerthName" property="hospberthname" jdbcType="VARCHAR" />
    <result column="hospBerthAbs" property="hospberthabs" jdbcType="VARCHAR" />
    <result column="hosploginid" property="hosploginid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hospBerthId, hospBerthDeptId, hospBerthName, hospBerthAbs, hosploginid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.medical.po.HospitalberthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospitalberth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hospitalberth
    where hospBerthId = #{hospberthid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hospitalberth
    where hospBerthId = #{hospberthid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.medical.po.HospitalberthExample" >
    delete from hospitalberth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.medical.po.Hospitalberth" >
    insert into hospitalberth (hospBerthId, hospBerthDeptId, hospBerthName, 
      hospBerthAbs, hosploginid)
    values (#{hospberthid,jdbcType=INTEGER}, #{hospberthdeptid,jdbcType=INTEGER}, #{hospberthname,jdbcType=VARCHAR}, 
      #{hospberthabs,jdbcType=VARCHAR}, #{hosploginid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.medical.po.Hospitalberth" >
    insert into hospitalberth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hospberthid != null" >
        hospBerthId,
      </if>
      <if test="hospberthdeptid != null" >
        hospBerthDeptId,
      </if>
      <if test="hospberthname != null" >
        hospBerthName,
      </if>
      <if test="hospberthabs != null" >
        hospBerthAbs,
      </if>
      <if test="hosploginid != null" >
        hosploginid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hospberthid != null" >
        #{hospberthid,jdbcType=INTEGER},
      </if>
      <if test="hospberthdeptid != null" >
        #{hospberthdeptid,jdbcType=INTEGER},
      </if>
      <if test="hospberthname != null" >
        #{hospberthname,jdbcType=VARCHAR},
      </if>
      <if test="hospberthabs != null" >
        #{hospberthabs,jdbcType=VARCHAR},
      </if>
      <if test="hosploginid != null" >
        #{hosploginid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.medical.po.HospitalberthExample" resultType="java.lang.Integer" >
    select count(*) from hospitalberth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hospitalberth
    <set >
      <if test="record.hospberthid != null" >
        hospBerthId = #{record.hospberthid,jdbcType=INTEGER},
      </if>
      <if test="record.hospberthdeptid != null" >
        hospBerthDeptId = #{record.hospberthdeptid,jdbcType=INTEGER},
      </if>
      <if test="record.hospberthname != null" >
        hospBerthName = #{record.hospberthname,jdbcType=VARCHAR},
      </if>
      <if test="record.hospberthabs != null" >
        hospBerthAbs = #{record.hospberthabs,jdbcType=VARCHAR},
      </if>
      <if test="record.hosploginid != null" >
        hosploginid = #{record.hosploginid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hospitalberth
    set hospBerthId = #{record.hospberthid,jdbcType=INTEGER},
      hospBerthDeptId = #{record.hospberthdeptid,jdbcType=INTEGER},
      hospBerthName = #{record.hospberthname,jdbcType=VARCHAR},
      hospBerthAbs = #{record.hospberthabs,jdbcType=VARCHAR},
      hosploginid = #{record.hosploginid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.medical.po.Hospitalberth" >
    update hospitalberth
    <set >
      <if test="hospberthdeptid != null" >
        hospBerthDeptId = #{hospberthdeptid,jdbcType=INTEGER},
      </if>
      <if test="hospberthname != null" >
        hospBerthName = #{hospberthname,jdbcType=VARCHAR},
      </if>
      <if test="hospberthabs != null" >
        hospBerthAbs = #{hospberthabs,jdbcType=VARCHAR},
      </if>
      <if test="hosploginid != null" >
        hosploginid = #{hosploginid,jdbcType=INTEGER},
      </if>
    </set>
    where hospBerthId = #{hospberthid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.medical.po.Hospitalberth" >
    update hospitalberth
    set hospBerthDeptId = #{hospberthdeptid,jdbcType=INTEGER},
      hospBerthName = #{hospberthname,jdbcType=VARCHAR},
      hospBerthAbs = #{hospberthabs,jdbcType=VARCHAR},
      hosploginid = #{hosploginid,jdbcType=INTEGER}
    where hospBerthId = #{hospberthid,jdbcType=INTEGER}
  </update>
</mapper>